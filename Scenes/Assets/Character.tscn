[gd_scene load_steps=7 format=3 uid="uid://dsjpakuvuf5o3"]

[sub_resource type="GDScript" id="GDScript_ktbik"]
script/source = "extends CharacterBody3D

const SPEED = 5.0
const JUMP_VELOCITY = 4.5
const ROTATION_SPEED : float = 0.5
@onready var body : Node3D = $BodyController
@onready var tiles : Array = get_tree().get_nodes_in_group(\"ColoredTiles\")
@onready var rayCast : RayCast3D = $RayCast3D

func _process(delta: float) -> void:
	var tile = rayCast.get_collider()
	if tile != null and tile.is_in_group(\"ColoredTiles\"):
		print(\"estoy colisionando con un cuadradito!\")
		# tile.free()
	else:
		print(\"no estoy colisionando!\")

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"jump\"): #  and is_on_floor()
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"move_left\", \"move_right\", \"move_forward\", \"move_backward\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	
	# body.rotate_y(1.0) gira siempre
	if direction:
		look_at(global_position - direction, Vector3.UP)
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_oequk"]
albedo_color = Color(9.14484e-07, 0.657929, 0.23583, 1)

[sub_resource type="CapsuleMesh" id="CapsuleMesh_n0sa3"]
material = SubResource("StandardMaterial3D_oequk")
radius = 0.25
height = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_u4bv2"]
albedo_color = Color(0.130932, 0.250641, 0.430848, 1)

[sub_resource type="BoxMesh" id="BoxMesh_mhs2c"]
material = SubResource("StandardMaterial3D_u4bv2")

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_wrvam"]
radius = 0.25
height = 1.0

[node name="Character" type="CharacterBody3D"]
script = SubResource("GDScript_ktbik")

[node name="CameraController" type="Node3D" parent="."]

[node name="Camera3D" type="Camera3D" parent="CameraController"]
transform = Transform3D(1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 3, 3)

[node name="BodyController" type="Node3D" parent="."]

[node name="Body" type="MeshInstance3D" parent="BodyController"]
mesh = SubResource("CapsuleMesh_n0sa3")
skeleton = NodePath("../..")

[node name="Face" type="MeshInstance3D" parent="BodyController"]
transform = Transform3D(0.351944, 0, 0, 0, 0.160026, 0, 0, 0, 0.288656, 0, 0.237375, -0.120934)
mesh = SubResource("BoxMesh_mhs2c")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_wrvam")

[node name="RayCast3D" type="RayCast3D" parent="."]
target_position = Vector3(0, -0.5, 0)
hit_from_inside = true
