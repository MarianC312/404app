[gd_scene load_steps=12 format=4 uid="uid://cgt6eywdxumfc"]

[ext_resource type="Script" path="res://Scripts/tile.gd" id="1_20usj"]
[ext_resource type="Texture2D" uid="uid://buqx0c5iev5vp" path="res://Blender/tile_tile.png" id="2_777ur"]

[sub_resource type="Gradient" id="Gradient_wxkbf"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_jtvbv"]
seed = 3
frequency = 0.0331

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ycsfj"]
color_ramp = SubResource("Gradient_wxkbf")
noise = SubResource("FastNoiseLite_jtvbv")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_t4ofe"]
resource_name = "Material.001"
albedo_texture = ExtResource("2_777ur")
normal_enabled = true
normal_texture = SubResource("NoiseTexture2D_ycsfj")

[sub_resource type="ArrayMesh" id="ArrayMesh_7pc7f"]
_surfaces = [{
"aabb": AABB(-1, -1, -1, 2, 2, 2),
"format": 34359742465,
"index_count": 84,
"index_data": PackedByteArray("AAAPAAQAAAAOAA8AAwAJAAgAAwAHAAkABwALAAkABwAFAAsABQADAAEABQAHAAMAAQAIAAoAAQADAAgABQAKAAsABQABAAoAAgAJAAYAAgAIAAkAAAAIAAIAAAAKAAgABgALAAQABgAJAAsABAAKAAAABAALAAoADgANAA8ADgAMAA0AAgAOAAAAAgAMAA4ABAANAAYABAAPAA0ABgAMAAIABgANAAwA"),
"name": "Material.001",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 16,
"vertex_data": PackedByteArray("UrxpPwAAgD9SvGm/AACAPwAAgL8AAIC/UrxpPwAAgD9SvGk/AACAPwAAgL8AAIA/UrxpvwAAgD9SvGm/AACAvwAAgL8AAIC/UrxpvwAAgD9SvGk/AACAvwAAgL8AAIA/AACAPwAAgD8AAIA/AACAvwAAgD8AAIA/AACAPwAAgD8AAIC/AACAvwAAgD8AAIC/UrxpPzinjj5SvGk/Urxpvzinjj5SvGk/UrxpPzinjj5SvGm/Urxpvzinjj5SvGm/")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_2wbyl"]
resource_name = "tile_Cube"
_surfaces = [{
"aabb": AABB(-1, -1, -1, 2, 2, 2),
"attribute_data": PackedByteArray("Kd70PuyQBT8p3vQ+7JAFPyne9D7skAU/AADAPgAAAD8AAMA+AAAAPwAAAAAAAAAAKd70PhRvej8p3vQ+FG96Pyne9D4Ub3o/AADAPgAAgD4AAMA+AACAPgAAAD8AAAAAcB2yPOyQBT9wHbI87JAFP3AdsjzskAU/AADAPgAAQD8AAAA+AAAAPwAAwD4AAEA/cB2yPBRvej9wHbI8FG96P3AdsjwUb3o/AADAPgAAgD8AAAA+AACAPgAAwD4AAAAAAAAgPwAAgD4AAAA/AACAPwAAAD8AAAA/AAAgPwAAgD8AACA/AAAAAAAAAAAAAIA/AAAgPwAAAD8AAAA/AAAAPwAAAAAAAAA/AAAgPwAAQD8AACA/AABAPwAAAAAAAAA/Kd70PhRvej8p3vQ+FG96PzPwdz+rQQY/cB2yPBRvej/Z5zA/q0EGP3AdsjwUb3o/Kd70PuyQBT8p3vQ+7JAFPzPwdz9E5Xw+cB2yPOyQBT/Z5zA/ROV8PnAdsjzskAU/"),
"format": 34359742487,
"index_count": 84,
"index_data": PackedByteArray("AQAtAAwAAQArAC0ACgAcABgACgAXABwAFQAhABsAFQAPACEAEAAJAAMAEAAWAAkABQAaACAABQALABoAEQAeACIAEQAEAB4ACAAdABMACAAZAB0AAgAZAAgAAgAfABkAEwAjAA0AEwAdACMADQAfAAIADQAjAB8ALAAoAC4ALAAmACgABgAqAAAABgAkACoADgApABQADgAvACkAEgAlAAcAEgAnACUA"),
"material": SubResource("StandardMaterial3D_t4ofe"),
"name": "Material.001",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 48,
"vertex_data": PackedByteArray("UrxpPwAAgD9SvGm/UrxpPwAAgD9SvGm/UrxpPwAAgD9SvGm/AACAPwAAgL8AAIC/AACAPwAAgL8AAIC/AACAPwAAgL8AAIC/UrxpPwAAgD9SvGk/UrxpPwAAgD9SvGk/UrxpPwAAgD9SvGk/AACAPwAAgL8AAIA/AACAPwAAgL8AAIA/AACAPwAAgL8AAIA/UrxpvwAAgD9SvGm/UrxpvwAAgD9SvGm/UrxpvwAAgD9SvGm/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/UrxpvwAAgD9SvGk/UrxpvwAAgD9SvGk/UrxpvwAAgD9SvGk/AACAvwAAgL8AAIA/AACAvwAAgL8AAIA/AACAvwAAgL8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAvwAAgD8AAIA/AACAvwAAgD8AAIA/AACAvwAAgD8AAIA/AACAPwAAgD8AAIC/AACAPwAAgD8AAIC/AACAPwAAgD8AAIC/AACAvwAAgD8AAIC/AACAvwAAgD8AAIC/AACAvwAAgD8AAIC/UrxpPzinjj5SvGk/UrxpPzinjj5SvGk/UrxpPzinjj5SvGk/Urxpvzinjj5SvGk/Urxpvzinjj5SvGk/Urxpvzinjj5SvGk/UrxpPzinjj5SvGm/UrxpPzinjj5SvGm/UrxpPzinjj5SvGm/Urxpvzinjj5SvGm/Urxpvzinjj5SvGm/Urxpvzinjj5SvGm/AAD/f////7//f/9/////P/9////+//+//38AAP///7///////3///////3//f/+/AAD/f////7//////////v/9///////+//38AAP///7//f/9//3///////3//f/+//3//f////z//f///////v////3////+/AAD/f/9/////fwAA////v///////f////////////7//f////v//v////3////+/AAD/f/9/////fwAA////v/9//3//f////3//f/9/////f///////v////3//f/+/AAD/f/9/////f/9//3////9////+//+///////9/////f////v//v////3//f/+/AAD/f/9//////////3////9///////+/AAD/f////7//////////v/9///////+//////////7//f///////v////3////+/AAD/f////7//f/9/////P/9///////+//3//f////z//f///////v////3////+/")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_7pc7f")

[sub_resource type="Shader" id="Shader_sbp2y"]
code = "shader_type spatial;
render_mode unshaded;

uniform vec3 base_color : source_color = vec3(0.32, 0.8, 0.86); // Color base verde
uniform float glow_intensity : hint_range(0.0, 5.0) = 1.0; // Intensidad del brillo
uniform float glow_speed : hint_range(0.0, 10.0) = 5.0; // Velocidad del brillo
uniform float hue_shift : hint_range(0.0, 1.0); // 0 to 1 range
uniform sampler2D albedo_texture;

// Function to convert RGB to HSV
vec3 rgb_to_hsv(vec3 c) {
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

// Function to convert HSV back to RGB
vec3 hsv_to_rgb(vec3 c) {
    vec3 p = abs(fract(c.xxx + vec3(0.0, 2.0 / 3.0, 1.0 / 3.0)) * 6.0 - 3.0);
    return c.z * mix(vec3(1.0), clamp(p - 1.0, 0.0, 1.0), c.y);
}


void vertex() {
	// Called for every vertex the material is visible on.
	// VERTEX.y += abs(sin(TIME));
}

void fragment() {
	//// Color base
    //vec3 color = base_color;
//
    //// Efecto de brillo dinámico usando una función seno
    //float glow = sin(TIME * glow_speed) * 0.5 + 0.5; // Oscila entre 0 y 1
    //color += color * glow * glow_intensity; // Añade el brillo al color base
//
    //// Aplicar el color final
    //ALBEDO = color;
	//ROUGHNESS = 0.2;
	//EMISSION = color * glow_intensity; // Hace que el objeto emita luz

	// ===== //

	vec4 albedo_color = texture(albedo_texture, UV);
    vec3 hsv = rgb_to_hsv(albedo_color.rgb);
    hsv.x = mod(hsv.x + hue_shift, 1.0); // Shift hue
    vec3 new_rgb = hsv_to_rgb(hsv);

    ALBEDO = new_rgb;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_gxd3u"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_sbp2y")
shader_parameter/base_color = Color(0.32, 0.8, 0.86, 1)
shader_parameter/glow_intensity = 1.056
shader_parameter/glow_speed = 5.0
shader_parameter/hue_shift = 0.182
shader_parameter/albedo_texture = ExtResource("2_777ur")

[sub_resource type="BoxShape3D" id="BoxShape3D_ytnku"]
size = Vector3(2, 0.05, 2)

[node name="Tile01" type="Area3D" groups=["ColoredTiles"]]
script = ExtResource("1_20usj")

[node name="tile" type="Node3D" parent="."]

[node name="Cube" type="MeshInstance3D" parent="tile"]
transform = Transform3D(1, 0, 0, 0, 0.025, 0, 0, 0, 1, 0, 0, 0)
mesh = SubResource("ArrayMesh_2wbyl")
skeleton = NodePath("")
surface_material_override/0 = SubResource("ShaderMaterial_gxd3u")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("BoxShape3D_ytnku")

[connection signal="area_entered" from="." to="." method="_on_area_entered"]
